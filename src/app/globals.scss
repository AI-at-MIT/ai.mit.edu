@use "sass:list";
@use "sass:color";
@tailwind base;
@tailwind components;
@tailwind utilities;

$initiatives:
  "reading" (rgb(66,255,0),rgb(0,163,255)),
  "labs" (rgb(255,122,0),rgb(127,0,254)),
  "workshops" (rgb(255, 83, 12), rgb(255,5,126)),
  "generator" (rgb(0,255,240), rgb(173,0,255)),
  "speakers" (rgb(0,255,178),rgb(249,255,0)),
  "permeate" (rgb(255,230,1), rgb(255,122,0), rgb(255,6,116)),
  "aim" (rgb(252,88,54), rgb(203,36,85), rgb(147,23,193), rgb(36,203,243), rgb(48,229,72), rgb(220,255,1))

  ;


  

@function transparent_colors($colors, $opacity) {
    $sequence: ();
    @each $color in $colors {
        $sequence: append($sequence, rgba($color, $opacity), comma);
    }
    @return $sequence;
}

@function lighten-colors($colors,$percent_lighter, $percent_saturated) {
  $sequence: ();
  @each $color in $colors {
      $sequence: append($sequence, color.scale($color, $lightness: $percent_lighter, $saturation: $percent_saturated) , comma);
  }
  @return $sequence;
}

$init-transparent-opacity: 0.3;   

  
:root {
  
    --b-x-offset: 0%;
    --b-y-offset: 80%;
  
  
    --off-white: 225, 225, 225;
    --gray: 126, 126, 126;
  
    --fast-rad-x: 100px;
    --fast-rad-y: 100px;


    --color-1: hsl(0, 0%, 100%);
    --color-2: hsl(0, 0%, 88%);
    --color-3: hsl(0, 0%, 49%);
    --color-4: hsl(0, 0%, 20%);
    --color-5: hsl(0, 0%, 9%);

    --foreground-rgb: 255, 255, 255;
    --background-color: 0,0,0;

    --background-dark: #0D0D0D;
    --background-light: #1D1D1D;

    --quicklink-hover-color: #00000060;
    --quicklink-active-color: #00000085;

    --bg-grad: radial-gradient(circle, #161616, #000000 90%);


    @each $init, $colors in $initiatives {
      $init-grad: linear-gradient(45deg, $colors);
      $init-grad-transparent: linear-gradient(45deg, transparent_colors($colors,$init-transparent-opacity));
   
      $light_colors: lighten-colors($colors,35%,50%);
      $light_init-grad: linear-gradient(45deg, $light_colors);
      $light_init-grad-transparent: linear-gradient(45deg, transparent_colors($light_colors,$init-transparent-opacity));
      

      --grad-#{$init}: #{$init-grad};
      --grad-transparent-#{$init}: #{$init-grad-transparent};
  
      --grad-light-#{$init}: #{$light_init-grad};
      --grad-transparent-light-#{$init}: #{$light_init-grad-transparent};
      
      
    }

  }


  .sun-center{
    transition: all 0.2s ease;
    transform-origin: 50% 50%;

  }
  .ray {
    transition: all 0.2s ease-in-out;
    opacity: 1;

  }
  
  .ray.reset {
    transform: rotate(0 15 15);
    opacity: 0;
  }

  .theme-button {
    transition: scale 0.1s ease-in-out;
  }
  .theme-button:hover {
    scale: 0.9;

  }

  [data-theme='light'] {
    --color-1: hsl(0, 0%, 0%);
    --color-2: hsl(0, 0%, 10%);
    --color-3: hsl(0, 0%, 40%);
    --color-4: hsl(0, 0%, 90%);
    --color-5: hsl(0, 0%, 97%);

    --quicklink-hover-color: #00000016;
    --quicklink-active-color: #0000003b;
    --bg-grad: radial-gradient(circle, #fff 0%, #ffffff 30%);


    --background-dark: #ffffff;
    --background-light: hsl(0, 0%, 98%);
    --background-color: 255,255,255;

    @each $init, $colors in $initiatives {
      --grad-#{$init}: var(--grad-light-#{$init});
      --grad-transparent-#{$init}: var(--grad-transparent-light-#{$init});
    }
   img {
      filter: contrast(0.8) saturate(1.3) brightness(1.2)  ;
 /* Apply multiple filters */
    }

    .sponsor img {
      filter: invert(100%);

    }
    
  }

  




@function get_grad($init) {
  @return var(--grad-#{$init});
}

  
 
.quicklink-text:hover {
  color: var(--quicklink-hover-color);
}

.quicklink-text:active {
  color: var(--quicklink-active-color);
}


$num-grad-key-frames: 20;
$bg-animation-time: 8s;

@mixin moving-gradient() {
  background-size: 200% 200%;
  -webkit-animation: Animation $bg-animation-time linear infinite;
  -moz-animation: Animation $bg-animation-time linear infinite;
  animation: Animation $bg-animation-time linear infinite;
}


// Function to generate keyframe data
@mixin keyframe-steps($frames) {
  $animation-data: ();

  @for $i from 0 through $frames {
    $angle: calc($i * 2 * pi / $frames);
    $xp: 50% + 50% * cos($angle);
    $yp: 50% + 50% * sin($angle);
    $percent: ($i / $frames) * 100%;

    #{$percent} {
      background-position: #{$xp} #{$yp};
    }
  }

}

@-webkit-keyframes Animation {
  @include keyframe-steps($num-grad-key-frames);
}

@-moz-keyframes Animation {
  @include keyframe-steps($num-grad-key-frames);
}

@keyframes Animation {
  @include keyframe-steps($num-grad-key-frames);
}




  
//construct css classes for each iniative
@each $init, $colors in $initiatives {


  .background-#{$init} {
      background: var(--grad-#{$init});
  }

  .border-#{$init} {
      background: var(--bg-grad) padding-box,
      var(--grad-transparent-#{$init}) border-box; 
      @include moving-gradient();

      &:hover {
          background: var(--bg-grad) padding-box,
          var(--grad-#{$init}) border-box;  
          @include moving-gradient();

      }

  }
  .clip-background-#{$init} {
      background: var(--grad-#{$init});
      -webkit-background-clip: text;
      background-clip: text;



  }




}


body {
    color: var(--color-1);
    background: var(--bg-grad);

    @include moving-gradient();
    background-repeat: no-repeat;
    background-attachment: fixed;
    overflow-x: hidden;
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
    color: var(--color-2);
    
  }







@layer utilities {
  .bg-shaded {
    background: var(--color-5);
  }
  .border-subtle {
    border-color: var(--color-4);
  }


  @for $i from 1 through 5 {
    .border-color-#{$i} {
      border-color: var(--color-#{$i});
    }
  }
  @for $i from 1 through 5 {
    .fill-color-#{$i} {
      fill: var(--color-#{$i});
    }
  }
  @for $i from 1 through 5 {
    .stroke-color-#{$i} {
      stroke: var(--color-#{$i});
    }
  }
  @for $i from 1 through 5 {
    .background-color-#{$i} {
      background: var(--color-#{$i});
    }
  }
}

  html {
    scroll-behavior: smooth;
  }
  
  body::-webkit-scrollbar {
    display: none; /* Chrome, Safari, and Opera */
  }
  .noHover {
    pointer-events: none; /* Disables pointer events like hover, click, etc. */
  }
  .bg-dark {
    background: var(--background-dark);
  }
  
  .border-bg-dark {
    border-color: var(--background-dark);
  }
  
  .quicklink {
   
    color: transparent;
  
  }
  .quicklink-text {
    color: transparent;
  
  }
  
  
  .container {
    background: var(--bg-grad);
    @include moving-gradient();

  
  }
  
  .title-tag-text {
    color: rgb(var(--color-2));
  }
  
  .title-desc-text {
    color: var(--color-3);
  }
  
  
  .off-white-text {
    color: rgb(var(--color-2));
  }
  
  .gray-text {
    color: var(--color-3);
  }
  

  
  
  .event-card:active {
  
    transform: scale(0.99); 
  }
  
  h1 {
    color: var(--color-1);
  
    font-size: xxx-large;
    margin: 30px 0 30px 0;
    text-align: center;
    font-family: 'Inter', sans-serif;
  }
   h2 {
    font-size: xx-large;
    margin: 15px 0 15px 0;
  
   }
  h3 {
    font-size: x-large;
    margin: 10px 0 10px 0;
  }
  
  p {
    font-size: x-large;
  }
  @media only screen and (max-width: 700px) {
    p {
      font-size: large;
    }
    h3 {
      font-size: large;
    }
    h2 {
      font-size: x-large;
      margin: 10px 0 10px 0;
    
     }
     h1 {
      font-size: xx-large;
      margin: 20px 0 20px 0;
    
     }
  }
  
  
  main {
    width: 100vw;
    overflow-x: hidden;
    align-items: center;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    justify-content: space-between;
  
  }

  .blurred-bg {
    background-color: rgba(var(--background-color), 0.6);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);

  }
  
  .section-full {
    min-height: 100vh;
    padding: 20px 30px;
  }
  
  .section {
    padding: 80px 30px;
  }
  
  .title-text {
    color: var(--color-2);
    font-family: 'Inter', sans-serif;
  
  }
  .text-elipses-container {
    display: -webkit-box; /* Necessary for line clamping */
    -webkit-box-orient: vertical; /* Necessary for line clamping */
    overflow: hidden; /* Hides overflowing content */
    text-overflow: ellipsis; /* Displays ellipsis */
    -webkit-line-clamp: 2; /* Limits to 2 lines */
  }
  
  .mobile {
    @media screen and (min-width: 800px) {
      display: none;
    }
  }
  
  .desktop {
    @media screen and (max-width: 800px) {
      display: none;
    }
  }
  
  .bg-grad-fast {
    background: radial-gradient(circle at 50% 50%, #FFFFFF30, #FFFFFF10) top right/200% 200%;
    animation: colorChange 1.5s infinite alternate;
  }
  @keyframes colorChange {
    to {
      background-position:top left;
    }
   }
  
  
  